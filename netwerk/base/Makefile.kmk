## @file
# Module makefile
#

SUB_DEPTH = ../..
include $(KBUILD_PATH)/subheader.kmk

USES += tasks

TASKS += necko

necko_EXTENDS = typelib
necko_DEFPATH := $(PATH_SUB_CURRENT)/public
necko_SOURCES = \
    nsIChannel.idl \
    nsILoadGroup.idl \
    nsIProtocolHandler.idl \
    nsIRequest.idl \
    nsIRequestObserver.idl \
    nsIStreamListener.idl \
    nsIIOService.idl \
    nsIURI.idl \
    nsIURL.idl \
    nsIFileURL.idl \
    nsIUploadChannel.idl \
    nsITraceableChannel.idl \
    nsIApplicationCache.idl \
    nsIApplicationCacheChannel.idl \
    nsIApplicationCacheContainer.idl \
    nsIApplicationCacheService.idl \
    nsIAuthInformation.idl \
    nsIAuthPrompt.idl \
    nsIAuthPrompt2.idl \
    nsIAuthPromptAdapterFactory.idl \
    nsIAuthPromptCallback.idl \
    nsIAsyncStreamCopier.idl \
    nsIAsyncVerifyRedirectCallback.idl \
    nsIBufferedStreams.idl \
    nsICancelable.idl \
    nsIChannelPolicy.idl \
    nsICryptoHash.idl \
    nsICryptoHMAC.idl \
    nsIDownloader.idl \
    nsIEncodedChannel.idl \
    nsIFileStreams.idl \
    nsIIncrementalDownload.idl \
    nsIInputStreamPump.idl \
    nsIInputStreamChannel.idl \
    nsIIOService2.idl \
    nsIMIMEInputStream.idl \
    nsINetAddr.idl \
    nsINetworkLinkService.idl \
    nsIPermission.idl \
    nsIPermissionManager.idl \
    nsIPrivateBrowsingService.idl \
    nsIProgressEventSink.idl \
    nsIPrompt.idl \
    nsIProtocolProxyService.idl \
    nsIProtocolProxyService2.idl \
    nsIProtocolProxyFilter.idl \
    nsIProtocolProxyCallback.idl \
    nsIProxiedProtocolHandler.idl \
    nsIProxyAutoConfig.idl \
    nsIProxyInfo.idl \
    nsITransport.idl \
    nsISocketTransport.idl \
    nsISocketTransportService.idl \
    nsISpeculativeConnect.idl \
    nsIServerSocket.idl \
    nsIResumableChannel.idl \
    nsIRequestObserverProxy.idl \
    nsISecurityInfoProvider.idl \
    nsIStreamListenerTee.idl \
    nsISimpleStreamListener.idl \
    nsIStreamTransportService.idl \
    nsIStreamLoader.idl \
    nsISyncStreamListener.idl \
    nsISystemProxySettings.idl \
    nsITimedChannel.idl \
    nsIUnicharStreamLoader.idl \
    nsIUploadChannel2.idl \
    nsIStandardURL.idl \
    nsINestedURI.idl \
    nsIURLParser.idl \
    nsIURIChecker.idl \
    nsISecurityEventSink.idl \
    nsISecretDecoderRing.idl \
    nsISecureBrowserUI.idl \
    nsICryptoFIPSInfo.idl \
    nsINSSErrorsService.idl \
    nsICacheInfoChannel.idl \
    nsICachingChannel.idl \
    nsIByteRangeRequest.idl \
    nsIMultiPartChannel.idl \
    nsIExternalProtocolHandler.idl \
    nsIAuthModule.idl \
    nsIContentSniffer.idl \
    nsIAuthPromptProvider.idl \
    nsPISocketTransportService.idl \
    nsIChannelEventSink.idl \
    nsINetUtil.idl \
    nsIProxiedChannel.idl \
    nsIRandomGenerator.idl \
    nsIStrictTransportSecurityService.idl \
    nsIURIWithPrincipal.idl \
    nsIURIClassifier.idl \
    nsIRedirectResultListener.idl \
    mozIThirdPartyUtil.idl \
    nsISerializationHelper.idl \
    nsIChildChannel.idl \
    nsIParentChannel.idl \
    nsIParentRedirectingChannel.idl \
    nsIRedirectChannelRegistrar.idl

ifdef MOZ_TOOLKIT_SEARCH
necko_SOURCES = \
    nsIBrowserSearchService.idl
endif

INSTALLS += neckobase_exports

neckobase_exports_INST = include/
neckobase_exports_SOURCES = \
    $(addprefix public/,\
        netCore.h \
        nsNetUtil.h \
        nsNetStrings.h \
        nsChannelProperties.h \
        nsURIHashKey.h \
        nsReadLine.h \
        nsASocketHandler.h \
        nsAsyncRedirectVerifyHelper.h \
        nsStreamListenerWrapper.h \
    ) \
    $(addprefix src/,\
        nsMIMEInputStream.h \
        nsURLHelper.h \
    )

INSTALLS += neckobase_components

neckobase_components_EXTENDS = components_install
neckobase_components_DEFPATH := $(PATH_SUB_CURRENT)/src
neckobase_components_SOURCES = \
    nsProxyAutoConfig.js \
    nsProxyAutoConfig.manifest

INSTALLS += neckobase_modules

neckobase_modules_EXTENDS = modules_install
neckobase_modules_DEFPATH := $(PATH_SUB_CURRENT)/src
neckobase_modules_SOURCES = \
    NetUtil.jsm

LIBRARIES += neckobase_s

neckobase_s_TEMPLATE   = LibXulChromium
neckobase_s_EXTENDS    = netwerk_s_base
neckobase_s_EXTENDS_BY = appending
neckobase_s_DEFPATH   := $(PATH_SUB_CURRENT)/src
neckobase_s_INCS       = \
    $(PATH_ROOT)/content/base/src \
    $(PATH_ROOT)/content/events/src
neckobase_s_SOURCES    = \
    nsTransportUtils.cpp \
    nsAsyncStreamCopier.cpp \
    nsAsyncRedirectVerifyHelper.cpp \
    nsAuthInformationHolder.cpp \
    nsBaseChannel.cpp \
    nsBaseContentStream.cpp \
    nsBufferedStreams.cpp \
    nsChannelClassifier.cpp \
    nsDirectoryIndexStream.cpp \
    nsDownloader.cpp \
    nsFileStreams.cpp \
    nsIncrementalDownload.cpp \
    nsInputStreamChannel.cpp \
    nsInputStreamPump.cpp \
    nsStreamTransportService.cpp \
    nsIOService.cpp \
    nsLoadGroup.cpp \
    nsMIMEInputStream.cpp \
    nsProtocolProxyService.cpp \
    nsProxyInfo.cpp \
    nsPACMan.cpp \
    nsRequestObserverProxy.cpp \
    nsSimpleStreamListener.cpp \
    nsSimpleURI.cpp \
    nsSimpleNestedURI.cpp \
    nsStandardURL.cpp \
    nsSocketTransport2.cpp \
    nsSocketTransportService2.cpp \
    nsServerSocket.cpp \
    nsStreamListenerTee.cpp \
    nsStreamLoader.cpp \
    nsSyncStreamListener.cpp \
    nsUnicharStreamLoader.cpp \
    nsURIChecker.cpp \
    nsURLHelper.cpp \
    nsURLParsers.cpp \
    nsNetAddr.cpp \
    nsNetStrings.cpp \
    nsBase64Encoder.cpp \
    nsSerializationHelper.cpp \
    nsDNSPrefetch.cpp \
    RedirectChannelRegistrar.cpp \
    nsPreloadedStream.cpp \
    nsStreamListenerWrapper.cpp

ifeq ($(MOZ_WIDGET_TOOLKIT),os2)
neckobase_s_SOURCES += nsURLHelperOS2.cpp
else
ifeq ($(MOZ_WIDGET_TOOLKIT),windows)
neckobase_s_SOURCES += \
	nsURLHelperWin.cpp
	nsNativeConnectionHelper.cpp
	nsAutodialWin.cpp
else
ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
neckobase_s_SOURCES += nsURLHelperOSX.cpp
else
neckobase_s_SOURCES += nsURLHelperUnix.cpp
endif
endif
endif

ifdef MOZ_PLATFORM_MAEMO
neckobase_s_SOURCES += nsNativeConnectionHelper.cpp
ifdef MOZ_ENABLE_LIBCONIC
neckobase_s_SOURCES += nsAutodialMaemo.cpp
neckobase_s_INCS    += ../../system/maemo
endif
ifdef MOZ_ENABLE_QTNETWORK
neckobase_s_SOURCES += nsAutodialQt.cpp
neckobase_s_INCS    += \
	../../system/qt
	$(error MOZ_QT_CFLAGS)
endif
endif

ifdef MOZ_ENABLE_LIBCONIC
neckobase_s_INCS += $(error GLIB_CFLAGS) $(error LIBCONIC_CFLAGS)
endif

include $(FILE_SUB_FOOTER)
