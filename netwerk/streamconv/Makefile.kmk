## @file
# Module makefile
#

SUB_DEPTH = ../..
include $(KBUILD_PATH)/subheader.kmk

USES += tasks

TASKS += necko_strconv

necko_strconv_EXTENDS = typelib
necko_strconv_DEFPATH := $(PATH_SUB_CURRENT)/public
necko_strconv_INCS    = \
    ../base/public
necko_strconv_SOURCES = \
    nsIStreamConverter.idl \
    nsIStreamConverterService.idl \
    mozITXTToHTMLConv.idl \
    nsITXTToHTMLConv.idl \
    nsIDirIndex.idl \
    nsIDirIndexListener.idl

ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
necko_strconv_SOURCES += \
    nsIAppleFileDecoder.idl
endif

LIBRARIES += nkconv_s

nkconv_s_EXTENDS    = netwerk_s_base
nkconv_s_EXTENDS_BY = appending
nkconv_s_DEFPATH   := $(PATH_SUB_CURRENT)/src
nkconv_s_SOURCES    = \
    nsStreamConverterService.cpp

ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
nkconv_s_SOURCES.amd64 += \
    nsAppleFileDecoder.cpp
endif

LIBRARIES += nkcnvts_s

nkcnvts_s_EXTENDS    = netwerk_s_base
nkcnvts_s_EXTENDS_BY = appending
nkcnvts_s_DEFPATH   := $(PATH_SUB_CURRENT)/converters
nkcnvts_s_SOURCES    = \
    mozTXTToHTMLConv.cpp \
    nsUnknownDecoder.cpp \
    nsHTTPCompressConv.cpp \
    nsTXTToHTMLConv.cpp \
    nsDirIndex.cpp \
    nsDirIndexParser.cpp \
    nsIndexedToHTML.cpp \
    nsMultiMixedConv.cpp

# only include FTP directory listing support if the FTP
# protocol is being built.
ifneq (,$(filter ftp,$(NECKO_PROTOCOLS)))
nkcnvts_s_SOURCES += \
    ParseFTPList.cpp \
    nsFTPDirListingConv.cpp
endif

ifneq ($(MOZ_WIDGET_TOOLKIT),cocoa)
nkcnvts_s_SOURCES += \
    nsBinHexDecoder.cpp
endif

include $(FILE_SUB_FOOTER)
