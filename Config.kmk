## @file
# Global Project Configuration File
#

#------------------------------------------------------------------------------
# Header
#------------------------------------------------------------------------------

#
# Include site-specific configuration for local definitions.
#
ifndef LOCAL_CONFIG
 LOCAL_CONFIG = $(wildcard $(PATH_ROOT)/LocalConfig.kmk)
endif
LOCAL_CONFIG_PRE = 1
include $(LOCAL_CONFIG)
LOCAL_CONFIG_PRE =

#------------------------------------------------------------------------------
# Global definitions
#------------------------------------------------------------------------------

MOZ_BUILD_APP          ?= browser
MOZ_DISTRIBUTION_ID    ?= org.mozilla
MOZ_USER_DIR           ?= Mozilla

MOZ_UPDATE_CHANNEL     ?= default

MOZ_MACBUNDLE_ID        = \
    $(MOZ_DISTRIBUTION_ID).$(tolower $(MOZ_APP_DISPLAYNAME))$(filter-out release,$(BUILD_TYPE))

# Variables read from the environment (normally after config scripts)
SHELL_CONFIG_VARS = \
	MOZILLA_VERSION MOZILLA_UAVERSION FIREFOX_VERSION \
	MOZ_APP_BASENAME MOZ_APP_VENDOR \
	MOZ_UPDATER MOZ_PHOENIX MOZ_CHROME_FILE_FORMAT \
	MOZ_SAFE_BROWSING MOZ_SERVICES_AITC MOZ_SERVICES_NOTIFICATIONS MOZ_SERVICES_SYNC \
	MOZ_APP_VERSION MOZ_BRANDING_DIRECTORY MOZ_OFFICIAL_BRANDING_DIRECTORY MOZ_APP_ID \
	ACCEPTED_MAR_CHANNEL_IDS MAR_CHANNEL_ID MOZ_PROFILE_MIGRATOR \
	MOZ_EXTENSION_MANAGER MOZ_APP_STATIC_INI MOZ_WEBAPP_RUNTIME MOZ_MEDIA_NAVIGATOR \
	MOZ_APP_DISPLAYNAME MOZ_UA_BUILDID \
	NSPR_MAJOR_VERSION NSPR_MINOR_VERSION NSPR_PATCH_VERSION

FILE_SUB_FOOTER     = $(PATH_ROOT)/config/footer.kmk
CACHED_CONFIG       = $(PATH_OBJ)/CachedConfig.kmk

MOZILLA_CONFIG_H    = $(PATH_OBJ)/mozilla-config.h
XPCOM_CONFIG_H 	    = $(PATH_OBJ)/xpcom/xpcom-config.h
XPCOM_PRIVATE_H     = $(PATH_OBJ)/xpcom/xpcom-private.h
BUILDID             = $(PATH_OBJ)/buildid

# Suffix for long long integer constants in C
if1of ($(KBUILD_TARGET), win)
LONGLONG_SUFF = i64
else
LONGLONG_SUFF = LL
endif

#
# Include cached build settings.
#
ifn1of (configure, $(MAKECMDGOALS))
 -include $(CACHED_CONFIG)
 ifeq ($(CACHED_CONFIG_INCLUDED),)
  $(error Please run 'kmk configure' to prepare build settings)
 else # ifeq ($(CACHED_CONFIG_INCLUDED),)
#
# Cached build settings sanity checks.
#
 ifeq ($(FIREFOX_VERSION),)
  $(error FIREFOX_VERSION is unexpectedly blank)
 endif
 endif # ifeq ($(CACHED_CONFIG_INCLUDED),)
endif # ifn1of (configure, $(MAKECMDGOALS))

#------------------------------------------------------------------------------
# Tools
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Common libraries referenced by components
#------------------------------------------------------------------------------

NSPR_LIBS   = $(PATH_STAGE_LIB)/nspr$(NSPR_MAJOR_VERSION)$(SUFF_LIB)

#------------------------------------------------------------------------------
# Templates
#------------------------------------------------------------------------------

TEMPLATE_Cxx            = C/C++ sources
TEMPLATE_Cxx_TOOL       = GXX3OMF
TEMPLATE_Cxx_INCS       = $(PATH_STAGE)/include
TEMPLATE_Cxx_CFLAGS     = -include $(MOZILLA_CONFIG_H) \
                          -Wall -Wpointer-arith -Wdeclaration-after-statement \
                          -Werror=return-type -Wtype-limits -Wempty-body \
                          -Wno-unused -Wno-overlength-strings -Wcast-align \
                          -fno-strict-aliasing
TEMPLATE_Cxx_CXXFLAGS   = -include $(MOZILLA_CONFIG_H) \
                          -Wall -Wpointer-arith -Woverloaded-virtual \
                          -Werror=return-type -Wtype-limits -Wempty-body \
                          -Wctor-dtor-privacy -Wno-overlength-strings \
                          -Wno-invalid-offsetof -Wno-variadic-macros -Wcast-align \
                          -fno-exceptions -fno-strict-aliasing -fno-rtti
TEMPLATE_Cxx_DEFS       = XP_OS2 NO_X11 MOZILLA_CLIENT
TEMPLATE_Cxx_DEPS       = $(MOZILLA_CONFIG_H) $(XPCOM_CONFIG_H) $(XPCOM_PRIVATE_H)

TEMPLATE_Cxx_CFLAGS.release     = -O2 -fomit-frame-pointer
TEMPLATE_Cxx_CXXFLAGS.release   = -O2 -fomit-frame-pointer
TEMPLATE_Cxx_DEFS.release       = NDEBUG TRIMMED
TEMPLATE_Cxx_LDFLAGS.release    =

TEMPLATE_Cxx_CFLAGS.debug       = -fno-omit-frame-pointer
TEMPLATE_Cxx_CXXFLAGS.debug     = -fno-omit-frame-pointer
TEMPLATE_Cxx_DEFS.debug         = DEBUG _DEBUG TRACING
TEMPLATE_Cxx_LDFLAGS.debug      = -fno-inline

# generate .sym files but don't put them in a separate dir
TEMPLATE_Cxx_LD_DEBUG       = split
TEMPLATE_Cxx_DEBUG_STAGE    = nul

TEMPLATE_Bin                = DLL or EXE
TEMPLATE_Bin_EXTENDS        = Cxx
TEMPLATE_Bin_LDFLAGS        = -Zmap -Zlinker /ST:0x100000 -Zhigh-mem

ifn1of ($(EMXOMFLD_TYPE),WLINK wlink)
TEMPLATE_Bin_LDFLAGS       += -Zlinker '"DISABLE 1121"'
endif

#------------------------------------------------------------------------------
# Explicit rules
#------------------------------------------------------------------------------

$$(XPCOM_CONFIG_H): $(PATH_ROOT)/xpcom/xpcom-config.os2.h | $$(call DIRDEP,$$(dir $$@))
	%$(call MSG_GENERATE,,$@)
	$(QUIET)$(CP) $< $@

$$(XPCOM_PRIVATE_H): $(PATH_ROOT)/xpcom/xpcom-private.os2.h | $$(call DIRDEP,$$(dir $$@))
	%$(call MSG_GENERATE,,$@)
	$(QUIET)$(CP) $< $@

BLDDIRS += $(call DIRDEP,$(dir $(XPCOM_CONFIG_H) $(XPCOM_PRIVATE_H)))
OTHER_CLEAN += $(XPCOM_CONFIG_H) $(XPCOM_PRIVATE_H)

redo-xpcom-config: clean-xpcom-config $(XPCOM_CONFIG_H) $(XPCOM_PRIVATE_H)
clean-xpcom-config:
	$(RM) -f $(XPCOM_CONFIG_H) $(XPCOM_PRIVATE_H)

$$(BUILDID): | $$(call DIRDEP,$$(dir $$@))
ifdef MOZ_BUILD_DATE
	printf "%s" $(MOZ_BUILD_DATE) > $@
else
	$(PYTHON) $(PATH_ROOT)/toolkit/xre/make-platformini.py --print-buildid > $@
endif

BLDDIRS += $(call DIRDEP,$(dir $(BUILDID)))
OTHER_CLEAN += $(BUILDID)
clean-buildid:
	$(RM) $(BUILDID)

#
# Configure target prepares cached settings by putting them to a dedicated
# .kmk file that is included by Config.kmk. It is intended for variables that
# require running other programs (like text processors) to get their values
# so they would slow down the build process if evaluated each time kmk is run.
#
.PHONY: configure
configure: | $$(call DIRDEP,$$(dir $$(CACHED_CONFIG)))
	$(QUIET)$(ECHO) Obtaining and saving build settings to $(CACHED_CONFIG)...
	$(QUIET)$(RM) -f $(CACHED_CONFIG)

	$(QUIET)$(SHELL) -c ' \
	\
	MOZILLA_VERSION=`$(PERL) $(PATH_ROOT)/config/milestone.pl -topsrcdir $(PATH_ROOT) 2>nul` ; \
	MOZILLA_UAVERSION=`$(PERL) $(PATH_ROOT)/config/milestone.pl -topsrcdir $(PATH_ROOT) -uaversion 2>nul` ; \
	FIREFOX_VERSION=`cat $(PATH_ROOT)/browser/config/version.txt` ; \
	\
	test -f $(PATH_ROOT)/$(MOZ_BUILD_APP)/confvars.sh && . $(PATH_ROOT)/$(MOZ_BUILD_APP)/confvars.sh ; \
	\
	test -z "$$MOZ_BRANDING_DIRECTORY" || MOZ_BRANDING_DIRECTORY=$(MOZ_BUILD_APP)/branding/nightly ; \
	test -f $(PATH_ROOT)/$$MOZ_BRANDING_DIRECTORY/configure.sh && . $(PATH_ROOT)/$$MOZ_BRANDING_DIRECTORY/configure.sh ; \
	\
	$(shell $(SED) -nre " \
		s:^MOD_MAJOR_VERSION=+([0-9]+)$$:NSPR_MAJOR_VERSION=\1\;:p; \
		s:^MOD_MINOR_VERSION=+([0-9]+)$$:NSPR_MINOR_VERSION=\1\;:p; \
		s:^MOD_PATCH_VERSION=+([0-9]+)$$:NSPR_PATCH_VERSION=\1\;:p; \
		" < $(PATH_ROOT)/nsprpub/configure.in) \
	\
	$(APPEND_EXT) -n $(CACHED_CONFIG) \
		$(foreach var, $(SHELL_CONFIG_VARS), "$(var) ?= $$$(var)") \
	\
'
	$(QUIET)$(CAT) $(CACHED_CONFIG)

	$(QUIET)$(APPEND) $(CACHED_CONFIG) 'CACHED_CONFIG_INCLUDED := 1'
	$(QUIET)$(ECHO) Done.

BLDDIRS += $(call DIRDEP,$(dir $(CACHED_CONFIG)))
OTHER_CLEAN += $(CACHED_CONFIG)

#------------------------------------------------------------------------------
# Footer
#------------------------------------------------------------------------------

#
# Include site-specific configuration for local overrides.
#
include $(LOCAL_CONFIG)
