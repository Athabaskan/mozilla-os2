## @file
# Module makefile
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk

INSTALLS += ssl_exports

ssl_exports_INST     = public/nss/
ssl_exports_SOURCES  = \
    ssl.h \
    sslt.h \
    sslerr.h \
    sslproto.h \
    preenc.h

DLLS += ssl

ssl_TEMPLATE     = NssDll
ssl_NAME         = ssl3
ssl_EXPORTS_FILE = ssl.def
ssl_SOURCES      = \
    derive.c \
    dtlscon.c \
    prelib.c \
    ssl3con.c \
    ssl3gthr.c \
    sslauth.c \
    sslcon.c \
    ssldef.c \
    sslenum.c \
    sslerr.c \
    sslerrstrs.c \
    sslinit.c \
    ssl3ext.c \
    sslgathr.c \
    sslmutex.c \
    sslnonce.c \
    sslreveal.c \
    sslsecur.c \
    sslsnce.c \
    sslsock.c \
    ssltrace.c \
    sslver.c \
    authcert.c \
    cmpcert.c \
    sslinfo.c \
    ssl3ecc.c
ssl_LIBS         = \
    $(PATH_STAGE_LIB)/nssutil3$(SUFF_LIB) \
    $(PATH_STAGE_LIB)/nss3$(SUFF_LIB) \
    $(PATH_STAGE_LIB)/freebl$(SUFF_LIB)

ifdef NSS_SURVIVE_DOUBLE_BYPASS_FAILURE
ssl_DEFS += NSS_SURVIVE_DOUBLE_BYPASS_FAILURE
endif

ifdef NSS_NO_PKCS11_BYPASS
ssl_DEFS += NO_PKCS11_BYPASS
else
ssl_LIBS += $(PATH_STAGE_LIB)/freebl$(SUFF_LIB)
endif

ifeq ($(KBUILD_TARGET),win)
ssl_DEFS += IN_LIBSSL
ssl_SOURCES += win32err.c
else
ifeq ($(KBUILD_TARGET),os2)
ssl_SOURCES += os2_err.c
else
ssl_SOURCES += unix_err.c
endif
endif

include $(FILE_SUB_FOOTER)
