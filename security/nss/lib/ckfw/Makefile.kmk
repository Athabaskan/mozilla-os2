## @file
# Module makefile
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk

USES += tasks

TASKS += nss_certdata

nss_certdata_SOURCE  = builtins/certdata.txt
nss_certdata_DEPS    = builtins/certdata.perl
nss_certdata_TARGET  = certdata.c
nss_certdata_COMMAND = $(PERL) $(deps) < $(src) > $(out)

INSTALLS += nssckfw_exports

nssckfw_exports_INST     = public/nss/
nssckfw_exports_SOURCES  = \
    nssck.api \
    nssckepv.h \
    nssckft.h \
    nssckfw.h \
    nssckfwc.h \
    nssckfwt.h \
    nssckg.h \
    nssckmdt.h \
    nssckt.h \
    $(addprefix builtins/, \
        nssckbi.h \
    )

INSTALLS += nssckfw_private_exports

nssckfw_private_exports_INST     = private/nss/
nssckfw_private_exports_SOURCES  = \
    ck.h \
    ckfw.h \
    ckfwm.h \
    ckfwtm.h \
    ckmd.h \
    ckt.h

LIBRARIES += nssckfw

nssckfw_TEMPLATE     = NssLib
nssckfw_SOURCES      = \
    crypto.c \
    find.c \
    hash.c \
    instance.c \
    mutex.c \
    object.c \
    session.c \
    sessobj.c \
    slot.c \
    token.c \
    wrap.c \
    mechanism.c

DLLS += nssckbi

nssckbi_TEMPLATE     = NssDll
nssckbi_DEFPATH     := $(PATH_SUB_CURRENT)/builtins
nssckbi_EXPORTS_FILE = nssckbi.def
nssckbi_INCS         = \
    .
nssckbi_SOURCES      = \
    anchor.c \
    constants.c \
    bfind.c \
    binst.c \
    bobject.c \
    bsession.c \
    bslot.c \
    btoken.c \
    ckbiver.c \
    $(nss_certdata_1_TARGET)
nssckbi_LIBS        = \
    $(PATH_STAGE_LIB)/nssckfw$(SUFF_LIB) \
    $(PATH_STAGE_LIB)/nssb$(SUFF_LIB)

include $(FILE_SUB_FOOTER)
