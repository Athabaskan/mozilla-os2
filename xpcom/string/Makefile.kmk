## @file
# Module makefile
#

SUB_DEPTH = ../..
include $(KBUILD_PATH)/subheader.kmk

INSTALLS += string_s_exports

string_s_exports_INST     = include/
string_s_exports_DEFPATH := $(PATH_SUB_CURRENT)/public
string_s_exports_SOURCES  = \
    nsAString.h \
    nsAlgorithm.h \
    nsCharTraits.h \
    nsDependentString.h \
    nsDependentSubstring.h \
    nsLiteralString.h \
    nsPrintfCString.h \
    nsPromiseFlatString.h \
    nsReadableUtils.h \
    nsString.h \
    nsStringBuffer.h \
    nsStringFwd.h \
    nsStringIterator.h \
    nsSubstring.h \
    nsSubstringTuple.h \
    nsTDependentString.h \
    nsTDependentSubstring.h \
    nsTPromiseFlatString.h \
    nsTString.h \
    nsTSubstring.h \
    nsTSubstringTuple.h \
    nsUTF8Utils.h \
    nsXPIDLString.h \
    string-template-def-unichar.h \
    string-template-def-char.h \
    string-template-undef.h \
    nsXPCOMStrings.h \
    nsEmbedString.h

LIBRARIES += string_s

string_s_TEMPLATE = LibXpCom
string_s_DEFPATH := $(PATH_SUB_CURRENT)/src
string_s_SOURCES  = \
	nsDependentString.cpp \
	nsDependentSubstring.cpp \
	nsPromiseFlatString.cpp \
	nsReadableUtils.cpp \
	nsSubstring.cpp \
	nsSubstringTuple.cpp \
	nsString.cpp \
	nsStringComparator.cpp \
	nsStringObsolete.cpp

# Are we targeting x86 or x86-64?  If so, compile the SSE2 functions for
# nsUTF8Utils.cpp.

ifeq ($(KBUILD_TARGET_ARCH),x86)

string_s_SOURCES += nsUTF8UtilsSSE2.cpp
nsUTF8UtilsSSE2.cpp_CXXFLAGS = \
	$(if $(findstring GXX,$(call _TARGET_TOOL,string_s)), \
		$(if $(filter solaris,$(KBUILD_TARGET)),-xarch=sse2 -xO4,-msse2))

endif # ifeq ($(KBUILD_ARCH),x86)

include $(FILE_SUB_FOOTER)


