## @file
# Module makefile
#

SUB_DEPTH = ../..
include $(KBUILD_PATH)/subheader.kmk

USES += tasks

TASKS += xpcom_ds

xpcom_ds_EXTENDS = typelib
xpcom_ds_SOURCES = \
    nsIAtom.idl \
    nsIAtomService.idl \
    nsICollection.idl \
    nsIEnumerator.idl \
    nsIINIParser.idl \
    nsIPersistentProperties2.idl \
    nsIProperty.idl \
    nsIPropertyBag.idl \
    nsIPropertyBag2.idl \
    nsIWritablePropertyBag.idl \
    nsIWritablePropertyBag2.idl \
    nsIVariant.idl \
    nsISerializable.idl \
    nsIStringEnumerator.idl \
    nsISupportsArray.idl \
    nsISupportsIterators.idl \
    nsIArray.idl \
    nsIHashable.idl \
    nsIMutableArray.idl \
    nsIObserverService.idl \
    nsIObserver.idl \
    nsIProperties.idl \
    nsISimpleEnumerator.idl \
    nsISupportsPrimitives.idl

INSTALLS += xpcomds_exports

xpcomds_exports_INST = include/
xpcomds_exports_SOURCES = \
    nsAtomService.h \
    nsCheapSets.h \
    nsCppSharedAllocator.h \
    nsCRT.h \
    nsExpirationTracker.h \
    nsFixedSizeAllocator.h \
    nsHashtable.h \
    nsIByteBuffer.h \
    nsIUnicharBuffer.h \
    nsMathUtils.h \
    nsObserverList.h \
    nsObserverService.h \
    nsStaticNameTable.h \
    nsStaticAtom.h \
    nsSupportsArray.h \
    nsSupportsPrimitives.h \
    nsVariant.h \
    nsStringEnumerator.h \
    nsHashPropertyBag.h \
    nsWhitespaceTokenizer.h \
    nsCharSeparatedTokenizer.h

INSTALLS += xpcomds_exports_mozilla

xpcomds_exports_mozilla_INST = include/mozilla/
xpcomds_exports_mozilla_SOURCES = \
    CharTokenizer.h \
    TimeStamp.h \
    StringBuilder.h

INSTALLS += xpcomds_components

xpcomds_components_EXTENDS = components_install
xpcomds_components_SOURCES = \
    nsINIProcessor.js \
    nsINIProcessor.manifest

LIBRARIES += xpcomds_s

xpcomds_s_TEMPLATE = LibXpCom
xpcomds_s_INCS     = \
    $(PATH_ROOT)/js/xpconnect/src \
    $(PATH_ROOT)/dom/base
xpcomds_s_SOURCES  = \
    nsArray.cpp \
    nsAtomTable.cpp \
    nsAtomService.cpp \
    nsByteBuffer.cpp \
    nsCRT.cpp \
    nsFixedSizeAllocator.cpp \
    nsHashPropertyBag.cpp \
    nsHashtable.cpp \
    nsINIParserImpl.cpp \
    nsObserverList.cpp \
    nsObserverService.cpp \
    nsProperties.cpp \
    nsPersistentProperties.cpp \
    nsStaticNameTable.cpp \
    nsStringEnumerator.cpp \
    nsSupportsArray.cpp \
    nsSupportsArrayEnumerator.cpp \
    nsSupportsPrimitives.cpp \
    nsUnicharBuffer.cpp \
    nsVariant.cpp

ifdef HAVE_CLOCK_MONOTONIC
xpcomds_s_SOURCES += TimeStamp_posix.cpp
else ifeq ($(KBUILD_TARGET),darwin)
xpcomds_s_SOURCES += TimeStamp_darwin.cpp
else ifeq ($(KBUILD_TARGET),win)
xpcomds_s_SOURCES += TimeStamp_windows.cpp
else
xpcomds_s_SOURCES += TimeStamp.cpp
endif

xpcom_ds_SOURCES.win  += nsIWindowsRegKey.idl
xpcom_exports_SOURCES += nsWindowsRegKey.h
xpcomds_s_SOURCES.win += nsWindowsRegKey.cpp

include $(FILE_SUB_FOOTER)
