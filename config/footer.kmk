## @file
# Global footer makefile
#
# This gets included in every Makefile.kmk instead of the default kBuild footer
# $(FILE_KBUILD_SUB_FOOTER) in order to perform extra processing.
#

#------------------------------------------------------------------------------
# Part included in all makefiles
#------------------------------------------------------------------------------

include $(PATH_ROOT)/config/helpers.kmk

#
# Hook that turns each word in INCLUDE_SUBDIRS into an include statement using
# the word as a name of the subdirectory (relative to the location of the
# current makefile) that contains Makefile.kmk to include.
#

define def_include_subdirs
INCLUDE_SUBDIRS :=
include $(PATH_SUB_CURRENT)/$(subdir)/Makefile.kmk
endef # define def_include_subdirs

$(foreach subdir,$(call GLOBAL_VAR_ALL,INCLUDE_SUBDIRS),\
    $(eval $(def_include_subdirs)))

#------------------------------------------------------------------------------
# Part included at the end of the top-most makefile
#------------------------------------------------------------------------------

ifeq ($(_SUB_MAKEFILE_STACK),)

#
# Hook that adds support for _PP_SOURCES to INSTALLS targets.
#

##
# Deals with one source from _PP_SOURCES of INSTALLS targets by
# preprocessing it withn Preprocessor.py and adding to _SOURCES.
#
# The following variables are recongnized on the source:
# - _DEFS: list of defines passed to Preprocessor.py.
# - _DEPS: list of dependencies for the target.
#
define def_installs_pp_src

local tgt := $$($(target)_0_OUTDIR)/$(notdir $(src))
local srcsrc := $(abspathex $(src),$($(target)_DEFPATH))

$(eval $$(subst :,_,$$(srcsrc))_DEFS = $$($(src)_DEFS))

$(tgt): $(srcsrc) $($(src)_DEPS) | $$(call DIRDEP,$$(dir $$@))
	%$(call MSG_GENERATE,,$@)
	$(QUIET)$(PYTHON) $(PATH_ROOT)/config/Preprocessor.py $(addprefix -D,$($(subst :,_,$<)_DEFS)) $< > $@

$(eval OTHER_CLEAN += $(tgt))

$(eval $(target)_SOURCES += $(tgt))

endef # def_installs_pp_src

##
# Deals with one INSTALLS target (wrt _PP_SOURCES).
#
define def_installs_pp_sources

$(foreach src,$($(target)_PP_SOURCES),$(evalval def_installs_pp_src))

endef # def_installs_pp_sources

$(foreach target,$(INSTALLS),$(evalval def_installs_pp_sources))

#------------------------------------------------------------------------------

#
# Hook that gathers all *_exports* targets to EXPORT_HEADERS_ALL_TARGETS.
# This is used in e.g. templates to easily depend on the installed headers.
#

EXPORT_HEADERS_ALL_TARGETS =

$(foreach target,$(INSTALLS),$(if $(findstring _exports,$(target)),\
	$(eval EXPORT_HEADERS_ALL_TARGETS += $$($(target)_1_TARGET))))

#------------------------------------------------------------------------------
# Part included from each sub-makefile (excluding the top one)
#------------------------------------------------------------------------------

else # ifeq ($(_SUB_MAKEFILE_STACK),)

endif # ifeq ($(_SUB_MAKEFILE_STACK),)

#
# Include the default kBuild footer.
#
include $(FILE_KBUILD_SUB_FOOTER)
